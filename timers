<!DOCTYPE html>
<html>
<head>
	<meta http-eqiv="content-type" content="text/html;charset=utf-8" />
	<title>Go за Прикладом: Таймери</title>
	<link rel=stylesheet href="site.css" />
	<script async src="https://www.googletagmanager.com/gtag/js?id=UA-75170058-3"></script>
	<script type="text/javascript">
	if (window.location.host == "gobyexample.com.ua") {
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js',      new Date());
		gtag('config', 'UA-75170058-3');
	}
	</script>
</head>
<body>
	<div class="example" id="timers">
	<h2><a href="./">Go за Прикладом</a>: Таймери</h2>

	<p class="warning">Work in Progress / Сайт в процесі розробки</p>

	
	<table>
		
		<tr>
			<td class="docs"><p>Інколи нам потрібно виконати певний код на якийсь момент
в майбутньому, або запускати його через певні інтервали
часу - це стає можливими завдяки сосбливим можливостям Go
відомим як: <em>таймер</em> та <em>маятник</em>. Спершу ми познайомимось
з таймерами, а в насутпному прикладі побачимо що таке
<a href="tickers">маятник</a>.</p>
</td>
			<td class="code empty leading">
			
			
			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			<a href="http://play.golang.org/p/eSRSjvTGJVx"><img title="Run code" src="play.png" class="run" /></a>
			<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;time&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"></td>
			<td class="code leading">
			
			<div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Таймер представляє поодиноку подію що станеться в
майбуутньому. Ви вказуєте таймеру на скільки часу
ви хочете зачекати, і таймер забезпечує вам канал
по якому ви можете отримати повідомлення про те що
час очікування скінчився. Наш таймер, наприклад,
розрахований на 2 секунди.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="nx">timer1</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">NewTimer</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p><code>&lt;-timer1.C</code> блокується каналом <code>C</code> допоки не буде
надіслано повідомлення що час витік.</p>
</td>
			<td class="code leading">
			
			<div class="highlight"><pre>    <span class="o">&lt;-</span><span class="nx">timer1</span><span class="p">.</span><span class="nx">C</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Таймер 1 просрочено&quot;</span><span class="p">)</span>
</pre></div>

			</td>
		</tr>
	
		<tr>
			<td class="docs"><p>Якщо вам просто хочеться зачекати, ми можете використати
<code>time.Sleep</code>. Одна з причин костності таймер, те що він
може бути зупинений в будь-який момент.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre>    <span class="nx">timer2</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">NewTimer</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">timer2</span><span class="p">.</span><span class="nx">C</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Таймер 2 просрочено&quot;</span><span class="p">)</span>
    <span class="p">}()</span>
    <span class="nx">stop2</span> <span class="o">:=</span> <span class="nx">timer2</span><span class="p">.</span><span class="nx">Stop</span><span class="p">()</span>
    <span class="k">if</span> <span class="nx">stop2</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Тaймер 2 зупинено&quot;</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	
	<table>
		
		<tr>
			<td class="docs"><p>Перший таймер витече приблизно через 2 секунди після старту,
буде зупинено ще до того, як він матиме шанс витікти.</p>
</td>
			<td class="code">
			
			<div class="highlight"><pre><span class="gp">$</span> go run timers.go
<span class="go">Таймер 1 просрочено</span>
<span class="go">Тaймер 2 зупинено</span>
</pre></div>

			</td>
		</tr>
	
	</table>
	


	<p class="next">
		Наступний приклад: <a href="tickers">Маятники</a>.
	</p>

<p class="footer">
Автор <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | Переклад <a href="https://twitter.com/butuzov">@butuzov</a> | <a href="https://github.com/butuzov/gobyexample/blob/ukrainian/examples/timers">source</a> | <a href="https://github.com/butuzov/gobyexample#license">ліцензія</a>
</p>
</div>
</body>
</html>
